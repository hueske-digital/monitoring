version: '3.8'

services:
  grafana:
    image: grafana/grafana-oss
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    volumes:
      - grafana_data:/data
      - $PWD/grafana/datasources:/etc/grafana/provisioning/datasources
      - $PWD/grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      grafana_prometheus:
      proxy_apps:

  nodeexporter:
    image: prom/node-exporter
    restart: unless-stopped
    networks:
      nodeexporter_prometheus:
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    networks:
      grafana_prometheus:
      nodeexporter_prometheus:
      dockerexporter_prometheus:
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  dockerexporter:
    image: spx01/dex
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      dockerexporter_prometheus:

volumes:
  prometheus_data:
  grafana_data:

networks:
  grafana_prometheus:
  nodeexporter_prometheus:
  dockerexporter_prometheus:
  proxy_apps:
    name: proxy_apps
    external: true